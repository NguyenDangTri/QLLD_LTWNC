//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eCongTrinh", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class eCongTrinh : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DIADIEMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NGAYCAPGPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NGAYHTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NGAYKCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TENCTField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DIADIEM {
            get {
                return this.DIADIEMField;
            }
            set {
                if ((object.ReferenceEquals(this.DIADIEMField, value) != true)) {
                    this.DIADIEMField = value;
                    this.RaisePropertyChanged("DIADIEM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACT {
            get {
                return this.MACTField;
            }
            set {
                if ((object.ReferenceEquals(this.MACTField, value) != true)) {
                    this.MACTField = value;
                    this.RaisePropertyChanged("MACT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NGAYCAPGP {
            get {
                return this.NGAYCAPGPField;
            }
            set {
                if ((this.NGAYCAPGPField.Equals(value) != true)) {
                    this.NGAYCAPGPField = value;
                    this.RaisePropertyChanged("NGAYCAPGP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NGAYHT {
            get {
                return this.NGAYHTField;
            }
            set {
                if ((this.NGAYHTField.Equals(value) != true)) {
                    this.NGAYHTField = value;
                    this.RaisePropertyChanged("NGAYHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NGAYKC {
            get {
                return this.NGAYKCField;
            }
            set {
                if ((this.NGAYKCField.Equals(value) != true)) {
                    this.NGAYKCField = value;
                    this.RaisePropertyChanged("NGAYKC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TENCT {
            get {
                return this.TENCTField;
            }
            set {
                if ((object.ReferenceEquals(this.TENCTField, value) != true)) {
                    this.TENCTField = value;
                    this.RaisePropertyChanged("TENCT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eNhanVien", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class eNhanVien : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DIACHIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HOTENField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MANVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAPBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NGAYSINHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PHAIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DIACHI {
            get {
                return this.DIACHIField;
            }
            set {
                if ((object.ReferenceEquals(this.DIACHIField, value) != true)) {
                    this.DIACHIField = value;
                    this.RaisePropertyChanged("DIACHI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HOTEN {
            get {
                return this.HOTENField;
            }
            set {
                if ((object.ReferenceEquals(this.HOTENField, value) != true)) {
                    this.HOTENField = value;
                    this.RaisePropertyChanged("HOTEN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MANV {
            get {
                return this.MANVField;
            }
            set {
                if ((object.ReferenceEquals(this.MANVField, value) != true)) {
                    this.MANVField = value;
                    this.RaisePropertyChanged("MANV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAPB {
            get {
                return this.MAPBField;
            }
            set {
                if ((object.ReferenceEquals(this.MAPBField, value) != true)) {
                    this.MAPBField = value;
                    this.RaisePropertyChanged("MAPB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NGAYSINH {
            get {
                return this.NGAYSINHField;
            }
            set {
                if ((this.NGAYSINHField.Equals(value) != true)) {
                    this.NGAYSINHField = value;
                    this.RaisePropertyChanged("NGAYSINH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PHAI {
            get {
                return this.PHAIField;
            }
            set {
                if ((object.ReferenceEquals(this.PHAIField, value) != true)) {
                    this.PHAIField = value;
                    this.RaisePropertyChanged("PHAI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ePhongBan", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class ePhongBan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAPBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TENPBField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAPB {
            get {
                return this.MAPBField;
            }
            set {
                if ((object.ReferenceEquals(this.MAPBField, value) != true)) {
                    this.MAPBField = value;
                    this.RaisePropertyChanged("MAPB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TENPB {
            get {
                return this.TENPBField;
            }
            set {
                if ((object.ReferenceEquals(this.TENPBField, value) != true)) {
                    this.TENPBField = value;
                    this.RaisePropertyChanged("TENPB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ePhanCong", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class ePhanCong : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MANVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAPBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SLNGAYCONGField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACT {
            get {
                return this.MACTField;
            }
            set {
                if ((object.ReferenceEquals(this.MACTField, value) != true)) {
                    this.MACTField = value;
                    this.RaisePropertyChanged("MACT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MANV {
            get {
                return this.MANVField;
            }
            set {
                if ((object.ReferenceEquals(this.MANVField, value) != true)) {
                    this.MANVField = value;
                    this.RaisePropertyChanged("MANV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAPB {
            get {
                return this.MAPBField;
            }
            set {
                if ((object.ReferenceEquals(this.MAPBField, value) != true)) {
                    this.MAPBField = value;
                    this.RaisePropertyChanged("MAPB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SLNGAYCONG {
            get {
                return this.SLNGAYCONGField;
            }
            set {
                if ((object.ReferenceEquals(this.SLNGAYCONGField, value) != true)) {
                    this.SLNGAYCONGField = value;
                    this.RaisePropertyChanged("SLNGAYCONG");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CongTrinh", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class CongTrinh : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DIADIEMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NGAYCAPGPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NGAYHTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NGAYKCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.ServiceReference1.PhanCong[] PhanCongsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TENCTField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DIADIEM {
            get {
                return this.DIADIEMField;
            }
            set {
                if ((object.ReferenceEquals(this.DIADIEMField, value) != true)) {
                    this.DIADIEMField = value;
                    this.RaisePropertyChanged("DIADIEM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACT {
            get {
                return this.MACTField;
            }
            set {
                if ((object.ReferenceEquals(this.MACTField, value) != true)) {
                    this.MACTField = value;
                    this.RaisePropertyChanged("MACT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NGAYCAPGP {
            get {
                return this.NGAYCAPGPField;
            }
            set {
                if ((this.NGAYCAPGPField.Equals(value) != true)) {
                    this.NGAYCAPGPField = value;
                    this.RaisePropertyChanged("NGAYCAPGP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NGAYHT {
            get {
                return this.NGAYHTField;
            }
            set {
                if ((this.NGAYHTField.Equals(value) != true)) {
                    this.NGAYHTField = value;
                    this.RaisePropertyChanged("NGAYHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NGAYKC {
            get {
                return this.NGAYKCField;
            }
            set {
                if ((this.NGAYKCField.Equals(value) != true)) {
                    this.NGAYKCField = value;
                    this.RaisePropertyChanged("NGAYKC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.ServiceReference1.PhanCong[] PhanCongs {
            get {
                return this.PhanCongsField;
            }
            set {
                if ((object.ReferenceEquals(this.PhanCongsField, value) != true)) {
                    this.PhanCongsField = value;
                    this.RaisePropertyChanged("PhanCongs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TENCT {
            get {
                return this.TENCTField;
            }
            set {
                if ((object.ReferenceEquals(this.TENCTField, value) != true)) {
                    this.TENCTField = value;
                    this.RaisePropertyChanged("TENCT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhanCong", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class PhanCong : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.ServiceReference1.CongTrinh CongTrinhField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MANVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAPBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.ServiceReference1.NhanVien NhanVienField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.ServiceReference1.PhongBan PhongBanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SLNGAYCONGField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.ServiceReference1.CongTrinh CongTrinh {
            get {
                return this.CongTrinhField;
            }
            set {
                if ((object.ReferenceEquals(this.CongTrinhField, value) != true)) {
                    this.CongTrinhField = value;
                    this.RaisePropertyChanged("CongTrinh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACT {
            get {
                return this.MACTField;
            }
            set {
                if ((object.ReferenceEquals(this.MACTField, value) != true)) {
                    this.MACTField = value;
                    this.RaisePropertyChanged("MACT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MANV {
            get {
                return this.MANVField;
            }
            set {
                if ((object.ReferenceEquals(this.MANVField, value) != true)) {
                    this.MANVField = value;
                    this.RaisePropertyChanged("MANV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAPB {
            get {
                return this.MAPBField;
            }
            set {
                if ((object.ReferenceEquals(this.MAPBField, value) != true)) {
                    this.MAPBField = value;
                    this.RaisePropertyChanged("MAPB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.ServiceReference1.NhanVien NhanVien {
            get {
                return this.NhanVienField;
            }
            set {
                if ((object.ReferenceEquals(this.NhanVienField, value) != true)) {
                    this.NhanVienField = value;
                    this.RaisePropertyChanged("NhanVien");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.ServiceReference1.PhongBan PhongBan {
            get {
                return this.PhongBanField;
            }
            set {
                if ((object.ReferenceEquals(this.PhongBanField, value) != true)) {
                    this.PhongBanField = value;
                    this.RaisePropertyChanged("PhongBan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SLNGAYCONG {
            get {
                return this.SLNGAYCONGField;
            }
            set {
                if ((object.ReferenceEquals(this.SLNGAYCONGField, value) != true)) {
                    this.SLNGAYCONGField = value;
                    this.RaisePropertyChanged("SLNGAYCONG");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NhanVien", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class NhanVien : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DIACHIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HOTENField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MANVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAPBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NGAYSINHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PHAIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.ServiceReference1.PhanCong[] PhanCongsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DIACHI {
            get {
                return this.DIACHIField;
            }
            set {
                if ((object.ReferenceEquals(this.DIACHIField, value) != true)) {
                    this.DIACHIField = value;
                    this.RaisePropertyChanged("DIACHI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HOTEN {
            get {
                return this.HOTENField;
            }
            set {
                if ((object.ReferenceEquals(this.HOTENField, value) != true)) {
                    this.HOTENField = value;
                    this.RaisePropertyChanged("HOTEN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MANV {
            get {
                return this.MANVField;
            }
            set {
                if ((object.ReferenceEquals(this.MANVField, value) != true)) {
                    this.MANVField = value;
                    this.RaisePropertyChanged("MANV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAPB {
            get {
                return this.MAPBField;
            }
            set {
                if ((object.ReferenceEquals(this.MAPBField, value) != true)) {
                    this.MAPBField = value;
                    this.RaisePropertyChanged("MAPB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NGAYSINH {
            get {
                return this.NGAYSINHField;
            }
            set {
                if ((this.NGAYSINHField.Equals(value) != true)) {
                    this.NGAYSINHField = value;
                    this.RaisePropertyChanged("NGAYSINH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PHAI {
            get {
                return this.PHAIField;
            }
            set {
                if ((object.ReferenceEquals(this.PHAIField, value) != true)) {
                    this.PHAIField = value;
                    this.RaisePropertyChanged("PHAI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.ServiceReference1.PhanCong[] PhanCongs {
            get {
                return this.PhanCongsField;
            }
            set {
                if ((object.ReferenceEquals(this.PhanCongsField, value) != true)) {
                    this.PhanCongsField = value;
                    this.RaisePropertyChanged("PhanCongs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhongBan", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class PhongBan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MAPBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.ServiceReference1.PhanCong[] PhanCongsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TENPBField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAPB {
            get {
                return this.MAPBField;
            }
            set {
                if ((object.ReferenceEquals(this.MAPBField, value) != true)) {
                    this.MAPBField = value;
                    this.RaisePropertyChanged("MAPB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.ServiceReference1.PhanCong[] PhanCongs {
            get {
                return this.PhanCongsField;
            }
            set {
                if ((object.ReferenceEquals(this.PhanCongsField, value) != true)) {
                    this.PhanCongsField = value;
                    this.RaisePropertyChanged("PhanCongs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TENPB {
            get {
                return this.TENPBField;
            }
            set {
                if ((object.ReferenceEquals(this.TENPBField, value) != true)) {
                    this.TENPBField = value;
                    this.RaisePropertyChanged("TENPB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDataFromCongTrinh", ReplyAction="http://tempuri.org/IService/GetAllDataFromCongTrinhResponse")]
        GUI.ServiceReference1.eCongTrinh[] GetAllDataFromCongTrinh();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDataFromCongTrinh", ReplyAction="http://tempuri.org/IService/GetAllDataFromCongTrinhResponse")]
        System.Threading.Tasks.Task<GUI.ServiceReference1.eCongTrinh[]> GetAllDataFromCongTrinhAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDataFromNhanVien", ReplyAction="http://tempuri.org/IService/GetAllDataFromNhanVienResponse")]
        GUI.ServiceReference1.eNhanVien[] GetAllDataFromNhanVien();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDataFromNhanVien", ReplyAction="http://tempuri.org/IService/GetAllDataFromNhanVienResponse")]
        System.Threading.Tasks.Task<GUI.ServiceReference1.eNhanVien[]> GetAllDataFromNhanVienAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDataFromPhongBan", ReplyAction="http://tempuri.org/IService/GetAllDataFromPhongBanResponse")]
        GUI.ServiceReference1.ePhongBan[] GetAllDataFromPhongBan();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDataFromPhongBan", ReplyAction="http://tempuri.org/IService/GetAllDataFromPhongBanResponse")]
        System.Threading.Tasks.Task<GUI.ServiceReference1.ePhongBan[]> GetAllDataFromPhongBanAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDataFromPhanCong", ReplyAction="http://tempuri.org/IService/GetAllDataFromPhanCongResponse")]
        GUI.ServiceReference1.ePhanCong[] GetAllDataFromPhanCong();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDataFromPhanCong", ReplyAction="http://tempuri.org/IService/GetAllDataFromPhanCongResponse")]
        System.Threading.Tasks.Task<GUI.ServiceReference1.ePhanCong[]> GetAllDataFromPhanCongAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/insertCt", ReplyAction="http://tempuri.org/IService/insertCtResponse")]
        int insertCt(GUI.ServiceReference1.CongTrinh ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/insertCt", ReplyAction="http://tempuri.org/IService/insertCtResponse")]
        System.Threading.Tasks.Task<int> insertCtAsync(GUI.ServiceReference1.CongTrinh ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/insertNv", ReplyAction="http://tempuri.org/IService/insertNvResponse")]
        int insertNv(GUI.ServiceReference1.NhanVien nv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/insertNv", ReplyAction="http://tempuri.org/IService/insertNvResponse")]
        System.Threading.Tasks.Task<int> insertNvAsync(GUI.ServiceReference1.NhanVien nv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/insertPhongBan", ReplyAction="http://tempuri.org/IService/insertPhongBanResponse")]
        int insertPhongBan(GUI.ServiceReference1.PhongBan pb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/insertPhongBan", ReplyAction="http://tempuri.org/IService/insertPhongBanResponse")]
        System.Threading.Tasks.Task<int> insertPhongBanAsync(GUI.ServiceReference1.PhongBan pb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/insertPc", ReplyAction="http://tempuri.org/IService/insertPcResponse")]
        int insertPc(GUI.ServiceReference1.ePhanCong pc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/insertPc", ReplyAction="http://tempuri.org/IService/insertPcResponse")]
        System.Threading.Tasks.Task<int> insertPcAsync(GUI.ServiceReference1.ePhanCong pc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/remove1datafromCongTrinh", ReplyAction="http://tempuri.org/IService/remove1datafromCongTrinhResponse")]
        int remove1datafromCongTrinh(GUI.ServiceReference1.CongTrinh ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/remove1datafromCongTrinh", ReplyAction="http://tempuri.org/IService/remove1datafromCongTrinhResponse")]
        System.Threading.Tasks.Task<int> remove1datafromCongTrinhAsync(GUI.ServiceReference1.CongTrinh ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/remove1datafromNhanVien", ReplyAction="http://tempuri.org/IService/remove1datafromNhanVienResponse")]
        int remove1datafromNhanVien(GUI.ServiceReference1.NhanVien nv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/remove1datafromNhanVien", ReplyAction="http://tempuri.org/IService/remove1datafromNhanVienResponse")]
        System.Threading.Tasks.Task<int> remove1datafromNhanVienAsync(GUI.ServiceReference1.NhanVien nv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/remove1datafromPhongBan", ReplyAction="http://tempuri.org/IService/remove1datafromPhongBanResponse")]
        int remove1datafromPhongBan(GUI.ServiceReference1.PhongBan pb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/remove1datafromPhongBan", ReplyAction="http://tempuri.org/IService/remove1datafromPhongBanResponse")]
        System.Threading.Tasks.Task<int> remove1datafromPhongBanAsync(GUI.ServiceReference1.PhongBan pb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/remove1datafromPhanCong", ReplyAction="http://tempuri.org/IService/remove1datafromPhanCongResponse")]
        int remove1datafromPhanCong(GUI.ServiceReference1.ePhanCong pc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/remove1datafromPhanCong", ReplyAction="http://tempuri.org/IService/remove1datafromPhanCongResponse")]
        System.Threading.Tasks.Task<int> remove1datafromPhanCongAsync(GUI.ServiceReference1.ePhanCong pc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/seach1CongtrinhbymaCT", ReplyAction="http://tempuri.org/IService/seach1CongtrinhbymaCTResponse")]
        GUI.ServiceReference1.eCongTrinh[] seach1CongtrinhbymaCT(string mact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/seach1CongtrinhbymaCT", ReplyAction="http://tempuri.org/IService/seach1CongtrinhbymaCTResponse")]
        System.Threading.Tasks.Task<GUI.ServiceReference1.eCongTrinh[]> seach1CongtrinhbymaCTAsync(string mact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/seach1Nhanvienbymanv", ReplyAction="http://tempuri.org/IService/seach1NhanvienbymanvResponse")]
        GUI.ServiceReference1.eNhanVien[] seach1Nhanvienbymanv(string manv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/seach1Nhanvienbymanv", ReplyAction="http://tempuri.org/IService/seach1NhanvienbymanvResponse")]
        System.Threading.Tasks.Task<GUI.ServiceReference1.eNhanVien[]> seach1NhanvienbymanvAsync(string manv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/change1Nhanvien", ReplyAction="http://tempuri.org/IService/change1NhanvienResponse")]
        int change1Nhanvien(GUI.ServiceReference1.NhanVien nv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/change1Nhanvien", ReplyAction="http://tempuri.org/IService/change1NhanvienResponse")]
        System.Threading.Tasks.Task<int> change1NhanvienAsync(GUI.ServiceReference1.NhanVien nv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/change1CongTrinh", ReplyAction="http://tempuri.org/IService/change1CongTrinhResponse")]
        int change1CongTrinh(GUI.ServiceReference1.CongTrinh ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/change1CongTrinh", ReplyAction="http://tempuri.org/IService/change1CongTrinhResponse")]
        System.Threading.Tasks.Task<int> change1CongTrinhAsync(GUI.ServiceReference1.CongTrinh ct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/change1PhongBan", ReplyAction="http://tempuri.org/IService/change1PhongBanResponse")]
        int change1PhongBan(GUI.ServiceReference1.PhongBan pb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/change1PhongBan", ReplyAction="http://tempuri.org/IService/change1PhongBanResponse")]
        System.Threading.Tasks.Task<int> change1PhongBanAsync(GUI.ServiceReference1.PhongBan pb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/change1PhanCong", ReplyAction="http://tempuri.org/IService/change1PhanCongResponse")]
        int change1PhanCong(GUI.ServiceReference1.ePhanCong pc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/change1PhanCong", ReplyAction="http://tempuri.org/IService/change1PhanCongResponse")]
        System.Threading.Tasks.Task<int> change1PhanCongAsync(GUI.ServiceReference1.ePhanCong pc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMaPBfromMaNV", ReplyAction="http://tempuri.org/IService/GetMaPBfromMaNVResponse")]
        string GetMaPBfromMaNV(string manv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMaPBfromMaNV", ReplyAction="http://tempuri.org/IService/GetMaPBfromMaNVResponse")]
        System.Threading.Tasks.Task<string> GetMaPBfromMaNVAsync(string manv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getMaNVfromMAPB", ReplyAction="http://tempuri.org/IService/getMaNVfromMAPBResponse")]
        GUI.ServiceReference1.eNhanVien[] getMaNVfromMAPB(string mapb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getMaNVfromMAPB", ReplyAction="http://tempuri.org/IService/getMaNVfromMAPBResponse")]
        System.Threading.Tasks.Task<GUI.ServiceReference1.eNhanVien[]> getMaNVfromMAPBAsync(string mapb);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : GUI.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<GUI.ServiceReference1.IService>, GUI.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GUI.ServiceReference1.eCongTrinh[] GetAllDataFromCongTrinh() {
            return base.Channel.GetAllDataFromCongTrinh();
        }
        
        public System.Threading.Tasks.Task<GUI.ServiceReference1.eCongTrinh[]> GetAllDataFromCongTrinhAsync() {
            return base.Channel.GetAllDataFromCongTrinhAsync();
        }
        
        public GUI.ServiceReference1.eNhanVien[] GetAllDataFromNhanVien() {
            return base.Channel.GetAllDataFromNhanVien();
        }
        
        public System.Threading.Tasks.Task<GUI.ServiceReference1.eNhanVien[]> GetAllDataFromNhanVienAsync() {
            return base.Channel.GetAllDataFromNhanVienAsync();
        }
        
        public GUI.ServiceReference1.ePhongBan[] GetAllDataFromPhongBan() {
            return base.Channel.GetAllDataFromPhongBan();
        }
        
        public System.Threading.Tasks.Task<GUI.ServiceReference1.ePhongBan[]> GetAllDataFromPhongBanAsync() {
            return base.Channel.GetAllDataFromPhongBanAsync();
        }
        
        public GUI.ServiceReference1.ePhanCong[] GetAllDataFromPhanCong() {
            return base.Channel.GetAllDataFromPhanCong();
        }
        
        public System.Threading.Tasks.Task<GUI.ServiceReference1.ePhanCong[]> GetAllDataFromPhanCongAsync() {
            return base.Channel.GetAllDataFromPhanCongAsync();
        }
        
        public int insertCt(GUI.ServiceReference1.CongTrinh ct) {
            return base.Channel.insertCt(ct);
        }
        
        public System.Threading.Tasks.Task<int> insertCtAsync(GUI.ServiceReference1.CongTrinh ct) {
            return base.Channel.insertCtAsync(ct);
        }
        
        public int insertNv(GUI.ServiceReference1.NhanVien nv) {
            return base.Channel.insertNv(nv);
        }
        
        public System.Threading.Tasks.Task<int> insertNvAsync(GUI.ServiceReference1.NhanVien nv) {
            return base.Channel.insertNvAsync(nv);
        }
        
        public int insertPhongBan(GUI.ServiceReference1.PhongBan pb) {
            return base.Channel.insertPhongBan(pb);
        }
        
        public System.Threading.Tasks.Task<int> insertPhongBanAsync(GUI.ServiceReference1.PhongBan pb) {
            return base.Channel.insertPhongBanAsync(pb);
        }
        
        public int insertPc(GUI.ServiceReference1.ePhanCong pc) {
            return base.Channel.insertPc(pc);
        }
        
        public System.Threading.Tasks.Task<int> insertPcAsync(GUI.ServiceReference1.ePhanCong pc) {
            return base.Channel.insertPcAsync(pc);
        }
        
        public int remove1datafromCongTrinh(GUI.ServiceReference1.CongTrinh ct) {
            return base.Channel.remove1datafromCongTrinh(ct);
        }
        
        public System.Threading.Tasks.Task<int> remove1datafromCongTrinhAsync(GUI.ServiceReference1.CongTrinh ct) {
            return base.Channel.remove1datafromCongTrinhAsync(ct);
        }
        
        public int remove1datafromNhanVien(GUI.ServiceReference1.NhanVien nv) {
            return base.Channel.remove1datafromNhanVien(nv);
        }
        
        public System.Threading.Tasks.Task<int> remove1datafromNhanVienAsync(GUI.ServiceReference1.NhanVien nv) {
            return base.Channel.remove1datafromNhanVienAsync(nv);
        }
        
        public int remove1datafromPhongBan(GUI.ServiceReference1.PhongBan pb) {
            return base.Channel.remove1datafromPhongBan(pb);
        }
        
        public System.Threading.Tasks.Task<int> remove1datafromPhongBanAsync(GUI.ServiceReference1.PhongBan pb) {
            return base.Channel.remove1datafromPhongBanAsync(pb);
        }
        
        public int remove1datafromPhanCong(GUI.ServiceReference1.ePhanCong pc) {
            return base.Channel.remove1datafromPhanCong(pc);
        }
        
        public System.Threading.Tasks.Task<int> remove1datafromPhanCongAsync(GUI.ServiceReference1.ePhanCong pc) {
            return base.Channel.remove1datafromPhanCongAsync(pc);
        }
        
        public GUI.ServiceReference1.eCongTrinh[] seach1CongtrinhbymaCT(string mact) {
            return base.Channel.seach1CongtrinhbymaCT(mact);
        }
        
        public System.Threading.Tasks.Task<GUI.ServiceReference1.eCongTrinh[]> seach1CongtrinhbymaCTAsync(string mact) {
            return base.Channel.seach1CongtrinhbymaCTAsync(mact);
        }
        
        public GUI.ServiceReference1.eNhanVien[] seach1Nhanvienbymanv(string manv) {
            return base.Channel.seach1Nhanvienbymanv(manv);
        }
        
        public System.Threading.Tasks.Task<GUI.ServiceReference1.eNhanVien[]> seach1NhanvienbymanvAsync(string manv) {
            return base.Channel.seach1NhanvienbymanvAsync(manv);
        }
        
        public int change1Nhanvien(GUI.ServiceReference1.NhanVien nv) {
            return base.Channel.change1Nhanvien(nv);
        }
        
        public System.Threading.Tasks.Task<int> change1NhanvienAsync(GUI.ServiceReference1.NhanVien nv) {
            return base.Channel.change1NhanvienAsync(nv);
        }
        
        public int change1CongTrinh(GUI.ServiceReference1.CongTrinh ct) {
            return base.Channel.change1CongTrinh(ct);
        }
        
        public System.Threading.Tasks.Task<int> change1CongTrinhAsync(GUI.ServiceReference1.CongTrinh ct) {
            return base.Channel.change1CongTrinhAsync(ct);
        }
        
        public int change1PhongBan(GUI.ServiceReference1.PhongBan pb) {
            return base.Channel.change1PhongBan(pb);
        }
        
        public System.Threading.Tasks.Task<int> change1PhongBanAsync(GUI.ServiceReference1.PhongBan pb) {
            return base.Channel.change1PhongBanAsync(pb);
        }
        
        public int change1PhanCong(GUI.ServiceReference1.ePhanCong pc) {
            return base.Channel.change1PhanCong(pc);
        }
        
        public System.Threading.Tasks.Task<int> change1PhanCongAsync(GUI.ServiceReference1.ePhanCong pc) {
            return base.Channel.change1PhanCongAsync(pc);
        }
        
        public string GetMaPBfromMaNV(string manv) {
            return base.Channel.GetMaPBfromMaNV(manv);
        }
        
        public System.Threading.Tasks.Task<string> GetMaPBfromMaNVAsync(string manv) {
            return base.Channel.GetMaPBfromMaNVAsync(manv);
        }
        
        public GUI.ServiceReference1.eNhanVien[] getMaNVfromMAPB(string mapb) {
            return base.Channel.getMaNVfromMAPB(mapb);
        }
        
        public System.Threading.Tasks.Task<GUI.ServiceReference1.eNhanVien[]> getMaNVfromMAPBAsync(string mapb) {
            return base.Channel.getMaNVfromMAPBAsync(mapb);
        }
    }
}
